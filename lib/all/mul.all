(include all
    lib/all/add.all
    lib/all/dec.all
    lib/all/eq.all
    lib/all/abs.all
    lib/all/neg.all
    lib/all/xor.all
    lib/all/ret.all
    lib/all/lr.all)

; mul(x, y) = -mul(|x|, |y|), if x < 0 xor y < 0 = 1
; mul(x, y) = 0, if y = 0
; mul(x, y) = |x| + mul(|x|, |y| - 1)
(define (mul x y)
    (if (xor (lr x 0) (lr y 0))
        (neg (mul (abs x) (abs y)))
        (if (eq y 0)
            (ret 0)
            (add (abs x) (mul (abs x) (dec (abs y)))))))
